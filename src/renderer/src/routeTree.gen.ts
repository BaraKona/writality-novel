/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FractalsFractalIdImport } from './routes/fractals/$fractalId'
import { Route as FoldersFolderIdImport } from './routes/folders/$folderId'
import { Route as ChaptersChapterIdImport } from './routes/chapters/$chapterId'

// Create Virtual Routes

const OverviewLazyImport = createFileRoute('/overview')()
const NewPageLazyImport = createFileRoute('/new-page')()
const AnalyticsLazyImport = createFileRoute('/analytics')()
const IndexLazyImport = createFileRoute('/')()
const WorldIndexLazyImport = createFileRoute('/world/')()
const PeopleIndexLazyImport = createFileRoute('/people/')()
const GalleryIndexLazyImport = createFileRoute('/gallery/')()
const CharactersIndexLazyImport = createFileRoute('/characters/')()
const WorldNotesLazyImport = createFileRoute('/world/notes')()
const WorldMapLazyImport = createFileRoute('/world/map')()
const WorldHistoryLazyImport = createFileRoute('/world/history')()
const WorldAnalyticsLazyImport = createFileRoute('/world/analytics')()
const PeopleCharactersLazyImport = createFileRoute('/people/characters')()
const GalleryWorldLazyImport = createFileRoute('/gallery/world')()
const GalleryPeopleLazyImport = createFileRoute('/gallery/people')()
const GalleryMiscellaneousLazyImport = createFileRoute(
  '/gallery/miscellaneous',
)()
const GalleryInspirationLazyImport = createFileRoute('/gallery/inspiration')()

// Create/Update Routes

const OverviewLazyRoute = OverviewLazyImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/overview.lazy').then((d) => d.Route))

const NewPageLazyRoute = NewPageLazyImport.update({
  id: '/new-page',
  path: '/new-page',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new-page.lazy').then((d) => d.Route))

const AnalyticsLazyRoute = AnalyticsLazyImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/analytics.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const WorldIndexLazyRoute = WorldIndexLazyImport.update({
  id: '/world/',
  path: '/world/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/world/index.lazy').then((d) => d.Route))

const PeopleIndexLazyRoute = PeopleIndexLazyImport.update({
  id: '/people/',
  path: '/people/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/people/index.lazy').then((d) => d.Route))

const GalleryIndexLazyRoute = GalleryIndexLazyImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/gallery/index.lazy').then((d) => d.Route))

const CharactersIndexLazyRoute = CharactersIndexLazyImport.update({
  id: '/characters/',
  path: '/characters/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/characters/index.lazy').then((d) => d.Route),
)

const WorldNotesLazyRoute = WorldNotesLazyImport.update({
  id: '/world/notes',
  path: '/world/notes',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/world/notes.lazy').then((d) => d.Route))

const WorldMapLazyRoute = WorldMapLazyImport.update({
  id: '/world/map',
  path: '/world/map',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/world/map.lazy').then((d) => d.Route))

const WorldHistoryLazyRoute = WorldHistoryLazyImport.update({
  id: '/world/history',
  path: '/world/history',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/world/history.lazy').then((d) => d.Route))

const WorldAnalyticsLazyRoute = WorldAnalyticsLazyImport.update({
  id: '/world/analytics',
  path: '/world/analytics',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/world/analytics.lazy').then((d) => d.Route),
)

const PeopleCharactersLazyRoute = PeopleCharactersLazyImport.update({
  id: '/people/characters',
  path: '/people/characters',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/people/characters.lazy').then((d) => d.Route),
)

const GalleryWorldLazyRoute = GalleryWorldLazyImport.update({
  id: '/gallery/world',
  path: '/gallery/world',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/gallery/world.lazy').then((d) => d.Route))

const GalleryPeopleLazyRoute = GalleryPeopleLazyImport.update({
  id: '/gallery/people',
  path: '/gallery/people',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/gallery/people.lazy').then((d) => d.Route),
)

const GalleryMiscellaneousLazyRoute = GalleryMiscellaneousLazyImport.update({
  id: '/gallery/miscellaneous',
  path: '/gallery/miscellaneous',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/gallery/miscellaneous.lazy').then((d) => d.Route),
)

const GalleryInspirationLazyRoute = GalleryInspirationLazyImport.update({
  id: '/gallery/inspiration',
  path: '/gallery/inspiration',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/gallery/inspiration.lazy').then((d) => d.Route),
)

const FractalsFractalIdRoute = FractalsFractalIdImport.update({
  id: '/fractals/$fractalId',
  path: '/fractals/$fractalId',
  getParentRoute: () => rootRoute,
} as any)

const FoldersFolderIdRoute = FoldersFolderIdImport.update({
  id: '/folders/$folderId',
  path: '/folders/$folderId',
  getParentRoute: () => rootRoute,
} as any)

const ChaptersChapterIdRoute = ChaptersChapterIdImport.update({
  id: '/chapters/$chapterId',
  path: '/chapters/$chapterId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsLazyImport
      parentRoute: typeof rootRoute
    }
    '/new-page': {
      id: '/new-page'
      path: '/new-page'
      fullPath: '/new-page'
      preLoaderRoute: typeof NewPageLazyImport
      parentRoute: typeof rootRoute
    }
    '/overview': {
      id: '/overview'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof OverviewLazyImport
      parentRoute: typeof rootRoute
    }
    '/chapters/$chapterId': {
      id: '/chapters/$chapterId'
      path: '/chapters/$chapterId'
      fullPath: '/chapters/$chapterId'
      preLoaderRoute: typeof ChaptersChapterIdImport
      parentRoute: typeof rootRoute
    }
    '/folders/$folderId': {
      id: '/folders/$folderId'
      path: '/folders/$folderId'
      fullPath: '/folders/$folderId'
      preLoaderRoute: typeof FoldersFolderIdImport
      parentRoute: typeof rootRoute
    }
    '/fractals/$fractalId': {
      id: '/fractals/$fractalId'
      path: '/fractals/$fractalId'
      fullPath: '/fractals/$fractalId'
      preLoaderRoute: typeof FractalsFractalIdImport
      parentRoute: typeof rootRoute
    }
    '/gallery/inspiration': {
      id: '/gallery/inspiration'
      path: '/gallery/inspiration'
      fullPath: '/gallery/inspiration'
      preLoaderRoute: typeof GalleryInspirationLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery/miscellaneous': {
      id: '/gallery/miscellaneous'
      path: '/gallery/miscellaneous'
      fullPath: '/gallery/miscellaneous'
      preLoaderRoute: typeof GalleryMiscellaneousLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery/people': {
      id: '/gallery/people'
      path: '/gallery/people'
      fullPath: '/gallery/people'
      preLoaderRoute: typeof GalleryPeopleLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery/world': {
      id: '/gallery/world'
      path: '/gallery/world'
      fullPath: '/gallery/world'
      preLoaderRoute: typeof GalleryWorldLazyImport
      parentRoute: typeof rootRoute
    }
    '/people/characters': {
      id: '/people/characters'
      path: '/people/characters'
      fullPath: '/people/characters'
      preLoaderRoute: typeof PeopleCharactersLazyImport
      parentRoute: typeof rootRoute
    }
    '/world/analytics': {
      id: '/world/analytics'
      path: '/world/analytics'
      fullPath: '/world/analytics'
      preLoaderRoute: typeof WorldAnalyticsLazyImport
      parentRoute: typeof rootRoute
    }
    '/world/history': {
      id: '/world/history'
      path: '/world/history'
      fullPath: '/world/history'
      preLoaderRoute: typeof WorldHistoryLazyImport
      parentRoute: typeof rootRoute
    }
    '/world/map': {
      id: '/world/map'
      path: '/world/map'
      fullPath: '/world/map'
      preLoaderRoute: typeof WorldMapLazyImport
      parentRoute: typeof rootRoute
    }
    '/world/notes': {
      id: '/world/notes'
      path: '/world/notes'
      fullPath: '/world/notes'
      preLoaderRoute: typeof WorldNotesLazyImport
      parentRoute: typeof rootRoute
    }
    '/characters/': {
      id: '/characters/'
      path: '/characters'
      fullPath: '/characters'
      preLoaderRoute: typeof CharactersIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/people/': {
      id: '/people/'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof PeopleIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/world/': {
      id: '/world/'
      path: '/world'
      fullPath: '/world'
      preLoaderRoute: typeof WorldIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/analytics': typeof AnalyticsLazyRoute
  '/new-page': typeof NewPageLazyRoute
  '/overview': typeof OverviewLazyRoute
  '/chapters/$chapterId': typeof ChaptersChapterIdRoute
  '/folders/$folderId': typeof FoldersFolderIdRoute
  '/fractals/$fractalId': typeof FractalsFractalIdRoute
  '/gallery/inspiration': typeof GalleryInspirationLazyRoute
  '/gallery/miscellaneous': typeof GalleryMiscellaneousLazyRoute
  '/gallery/people': typeof GalleryPeopleLazyRoute
  '/gallery/world': typeof GalleryWorldLazyRoute
  '/people/characters': typeof PeopleCharactersLazyRoute
  '/world/analytics': typeof WorldAnalyticsLazyRoute
  '/world/history': typeof WorldHistoryLazyRoute
  '/world/map': typeof WorldMapLazyRoute
  '/world/notes': typeof WorldNotesLazyRoute
  '/characters': typeof CharactersIndexLazyRoute
  '/gallery': typeof GalleryIndexLazyRoute
  '/people': typeof PeopleIndexLazyRoute
  '/world': typeof WorldIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/analytics': typeof AnalyticsLazyRoute
  '/new-page': typeof NewPageLazyRoute
  '/overview': typeof OverviewLazyRoute
  '/chapters/$chapterId': typeof ChaptersChapterIdRoute
  '/folders/$folderId': typeof FoldersFolderIdRoute
  '/fractals/$fractalId': typeof FractalsFractalIdRoute
  '/gallery/inspiration': typeof GalleryInspirationLazyRoute
  '/gallery/miscellaneous': typeof GalleryMiscellaneousLazyRoute
  '/gallery/people': typeof GalleryPeopleLazyRoute
  '/gallery/world': typeof GalleryWorldLazyRoute
  '/people/characters': typeof PeopleCharactersLazyRoute
  '/world/analytics': typeof WorldAnalyticsLazyRoute
  '/world/history': typeof WorldHistoryLazyRoute
  '/world/map': typeof WorldMapLazyRoute
  '/world/notes': typeof WorldNotesLazyRoute
  '/characters': typeof CharactersIndexLazyRoute
  '/gallery': typeof GalleryIndexLazyRoute
  '/people': typeof PeopleIndexLazyRoute
  '/world': typeof WorldIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/analytics': typeof AnalyticsLazyRoute
  '/new-page': typeof NewPageLazyRoute
  '/overview': typeof OverviewLazyRoute
  '/chapters/$chapterId': typeof ChaptersChapterIdRoute
  '/folders/$folderId': typeof FoldersFolderIdRoute
  '/fractals/$fractalId': typeof FractalsFractalIdRoute
  '/gallery/inspiration': typeof GalleryInspirationLazyRoute
  '/gallery/miscellaneous': typeof GalleryMiscellaneousLazyRoute
  '/gallery/people': typeof GalleryPeopleLazyRoute
  '/gallery/world': typeof GalleryWorldLazyRoute
  '/people/characters': typeof PeopleCharactersLazyRoute
  '/world/analytics': typeof WorldAnalyticsLazyRoute
  '/world/history': typeof WorldHistoryLazyRoute
  '/world/map': typeof WorldMapLazyRoute
  '/world/notes': typeof WorldNotesLazyRoute
  '/characters/': typeof CharactersIndexLazyRoute
  '/gallery/': typeof GalleryIndexLazyRoute
  '/people/': typeof PeopleIndexLazyRoute
  '/world/': typeof WorldIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/new-page'
    | '/overview'
    | '/chapters/$chapterId'
    | '/folders/$folderId'
    | '/fractals/$fractalId'
    | '/gallery/inspiration'
    | '/gallery/miscellaneous'
    | '/gallery/people'
    | '/gallery/world'
    | '/people/characters'
    | '/world/analytics'
    | '/world/history'
    | '/world/map'
    | '/world/notes'
    | '/characters'
    | '/gallery'
    | '/people'
    | '/world'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/new-page'
    | '/overview'
    | '/chapters/$chapterId'
    | '/folders/$folderId'
    | '/fractals/$fractalId'
    | '/gallery/inspiration'
    | '/gallery/miscellaneous'
    | '/gallery/people'
    | '/gallery/world'
    | '/people/characters'
    | '/world/analytics'
    | '/world/history'
    | '/world/map'
    | '/world/notes'
    | '/characters'
    | '/gallery'
    | '/people'
    | '/world'
  id:
    | '__root__'
    | '/'
    | '/analytics'
    | '/new-page'
    | '/overview'
    | '/chapters/$chapterId'
    | '/folders/$folderId'
    | '/fractals/$fractalId'
    | '/gallery/inspiration'
    | '/gallery/miscellaneous'
    | '/gallery/people'
    | '/gallery/world'
    | '/people/characters'
    | '/world/analytics'
    | '/world/history'
    | '/world/map'
    | '/world/notes'
    | '/characters/'
    | '/gallery/'
    | '/people/'
    | '/world/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AnalyticsLazyRoute: typeof AnalyticsLazyRoute
  NewPageLazyRoute: typeof NewPageLazyRoute
  OverviewLazyRoute: typeof OverviewLazyRoute
  ChaptersChapterIdRoute: typeof ChaptersChapterIdRoute
  FoldersFolderIdRoute: typeof FoldersFolderIdRoute
  FractalsFractalIdRoute: typeof FractalsFractalIdRoute
  GalleryInspirationLazyRoute: typeof GalleryInspirationLazyRoute
  GalleryMiscellaneousLazyRoute: typeof GalleryMiscellaneousLazyRoute
  GalleryPeopleLazyRoute: typeof GalleryPeopleLazyRoute
  GalleryWorldLazyRoute: typeof GalleryWorldLazyRoute
  PeopleCharactersLazyRoute: typeof PeopleCharactersLazyRoute
  WorldAnalyticsLazyRoute: typeof WorldAnalyticsLazyRoute
  WorldHistoryLazyRoute: typeof WorldHistoryLazyRoute
  WorldMapLazyRoute: typeof WorldMapLazyRoute
  WorldNotesLazyRoute: typeof WorldNotesLazyRoute
  CharactersIndexLazyRoute: typeof CharactersIndexLazyRoute
  GalleryIndexLazyRoute: typeof GalleryIndexLazyRoute
  PeopleIndexLazyRoute: typeof PeopleIndexLazyRoute
  WorldIndexLazyRoute: typeof WorldIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AnalyticsLazyRoute: AnalyticsLazyRoute,
  NewPageLazyRoute: NewPageLazyRoute,
  OverviewLazyRoute: OverviewLazyRoute,
  ChaptersChapterIdRoute: ChaptersChapterIdRoute,
  FoldersFolderIdRoute: FoldersFolderIdRoute,
  FractalsFractalIdRoute: FractalsFractalIdRoute,
  GalleryInspirationLazyRoute: GalleryInspirationLazyRoute,
  GalleryMiscellaneousLazyRoute: GalleryMiscellaneousLazyRoute,
  GalleryPeopleLazyRoute: GalleryPeopleLazyRoute,
  GalleryWorldLazyRoute: GalleryWorldLazyRoute,
  PeopleCharactersLazyRoute: PeopleCharactersLazyRoute,
  WorldAnalyticsLazyRoute: WorldAnalyticsLazyRoute,
  WorldHistoryLazyRoute: WorldHistoryLazyRoute,
  WorldMapLazyRoute: WorldMapLazyRoute,
  WorldNotesLazyRoute: WorldNotesLazyRoute,
  CharactersIndexLazyRoute: CharactersIndexLazyRoute,
  GalleryIndexLazyRoute: GalleryIndexLazyRoute,
  PeopleIndexLazyRoute: PeopleIndexLazyRoute,
  WorldIndexLazyRoute: WorldIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analytics",
        "/new-page",
        "/overview",
        "/chapters/$chapterId",
        "/folders/$folderId",
        "/fractals/$fractalId",
        "/gallery/inspiration",
        "/gallery/miscellaneous",
        "/gallery/people",
        "/gallery/world",
        "/people/characters",
        "/world/analytics",
        "/world/history",
        "/world/map",
        "/world/notes",
        "/characters/",
        "/gallery/",
        "/people/",
        "/world/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/analytics": {
      "filePath": "analytics.lazy.tsx"
    },
    "/new-page": {
      "filePath": "new-page.lazy.tsx"
    },
    "/overview": {
      "filePath": "overview.lazy.tsx"
    },
    "/chapters/$chapterId": {
      "filePath": "chapters/$chapterId.tsx"
    },
    "/folders/$folderId": {
      "filePath": "folders/$folderId.tsx"
    },
    "/fractals/$fractalId": {
      "filePath": "fractals/$fractalId.tsx"
    },
    "/gallery/inspiration": {
      "filePath": "gallery/inspiration.lazy.tsx"
    },
    "/gallery/miscellaneous": {
      "filePath": "gallery/miscellaneous.lazy.tsx"
    },
    "/gallery/people": {
      "filePath": "gallery/people.lazy.tsx"
    },
    "/gallery/world": {
      "filePath": "gallery/world.lazy.tsx"
    },
    "/people/characters": {
      "filePath": "people/characters.lazy.tsx"
    },
    "/world/analytics": {
      "filePath": "world/analytics.lazy.tsx"
    },
    "/world/history": {
      "filePath": "world/history.lazy.tsx"
    },
    "/world/map": {
      "filePath": "world/map.lazy.tsx"
    },
    "/world/notes": {
      "filePath": "world/notes.lazy.tsx"
    },
    "/characters/": {
      "filePath": "characters/index.lazy.tsx"
    },
    "/gallery/": {
      "filePath": "gallery/index.lazy.tsx"
    },
    "/people/": {
      "filePath": "people/index.lazy.tsx"
    },
    "/world/": {
      "filePath": "world/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
