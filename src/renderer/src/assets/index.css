@import 'tailwindcss';
@import url('https://fonts.googleapis.com/css2?family=Inter&family=Quicksand:wght@300..700&display=swap');

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --background-image-default: url('@renderer/assets/images/fantasy-endless-hole-landscape.jpg');
  --background-image-1: url('@renderer/assets/images/writality-1.png');
  --background-image-2: url('@renderer/assets/images/writality-2.png');
  --background-image-3: url('@renderer/assets/images/writality-3.png');
  --background-image-4: url('@renderer/assets/images/writality-4.png');
  --background-image-5: url('@renderer/assets/images/writality-5.png');

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-text: hsl(var(--text));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --text: hsl(var(--text));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-sidebar: hsl(var(--sidebar-background));
  --color-sidebar-foreground: hsl(var(--sidebar-foreground));
  --color-sidebar-primary: hsl(var(--sidebar-primary));
  --color-sidebar-primary-foreground: hsl(var(--sidebar-primary-foreground));
  --color-sidebar-accent: hsl(var(--sidebar-accent));
  --color-sidebar-accent-foreground: hsl(var(--sidebar-accent-foreground));
  --color-sidebar-border: hsl(var(--sidebar-border));
  --color-sidebar-ring: hsl(var(--sidebar-ring));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
  :root {
    --font-inter: 'Inter', sans-serif;
    --font-quicksand: 'Quicksand', sans-serif;
  }

  body {
    min-height: 100vh;
    /* font-family: var(--font-quicksand); */
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  p,
  h6 {
    /* font-family: var(--font-quicksand); */
  }
}

@keyframes slideaway {
  from {
    display: flex;
  }
  to {
    transform: translateX(-40px);
    opacity: 0;
    display: none;
  }
}

@keyframes slidein {
  from {
    transform: translateX(-40px);
    opacity: 0;
  }
  to {
    display: flex;
  }
}

.show {
  animation: slidein 200ms;
  display: flex;
}

.hide {
  animation: slideaway 200ms;
  display: none;
}

@layer utilities {
  body,
  #root {
    min-height: 100vh;
    max-height: 100vh;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --text: 240, 7%, 19%;

    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;

    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;

    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;

    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;

    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;

    --radius: 0.5rem;
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

.bn-container[data-color-scheme] {
  --bn-colors-editor-text: hsl(var(--text));
  --bn-colors-editor-background: transparent;
  --btn-colors-inline-content: hsl(var(--text));
  --bn-colors-menu-text: hsl(var(--text));
  --bn-colors-menu-background: hsl(var(--background));
  --bn-colors-tooltip-text: hsl(var(--text));
  --bn-colors-tooltip-background: hsl(var(--background));
  --bn-colors-hovered-text: hsl(var(--text));
  --bn-colors-hovered-background: hsl(var(--accent));
  --bn-colors-selected-text: hsl(var(--text));
  --bn-colors-selected-background: hsl(var(--accent));
  --bn-colors-disabled-text: hsl(var(--text));
  --bn-colors-disabled-background: hsl(var(--muted));
  --bn-colors-shadow: hsl(var(--accent));
  --bn-colors-border: hsl(var(--border));
  --bn-colors-side-menu: hsl(var(--border));
  --bn-color-highlight-colors: hsl(var(--primary));
  --bn-border-radius: 0.6rem;
  --bn-font-family: Helvetica Neue, sans-serif;
}

/* ::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}
::-webkit-scrollbar-thumb {
  border-radius: 4px;
}
::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--border));
} */

@layer utilities {
  nav,
  /* aside, */
  header {
    -webkit-app-region: drag;
  }

  button,
  a,
  section {
    -webkit-app-region: no-drag;
  }
}

@layer base {
  * {
    @apply border-border;
    @apply text-text;
  }
  body {
    @apply bg-background text-foreground;
  }
}
